[
    {
        "id": "5f562f66.a301e",
        "type": "tab",
        "label": "device-message-adapter",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "79250bf3.365cc4",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "93049b70.2dc5c8",
        "type": "mqtt out",
        "z": "5f562f66.a301e",
        "name": "Publish Readings",
        "topic": "$(MQTTPUBLISHTOPIC)",
        "qos": "0",
        "retain": "false",
        "broker": "79250bf3.365cc4",
        "x": 1310,
        "y": 420,
        "wires": []
    },
    {
        "id": "8cda9011.eab33",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Subscribe Settings",
        "topic": "$(MQTTSUBSCRIBETOPIC)",
        "qos": "0",
        "datatype": "auto",
        "broker": "79250bf3.365cc4",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "dc36009e.fdeeb"
            ]
        ]
    },
    {
        "id": "dc36009e.fdeeb",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 270,
        "y": 160,
        "wires": [
            [
                "c01ae89f.f25478",
                "c6e7a50a.046978"
            ]
        ]
    },
    {
        "id": "5902d0c0.241a6",
        "type": "file",
        "z": "5f562f66.a301e",
        "name": "Write initSettings.json",
        "filename": "initSettings.json",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 620,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f3f3f15.081c31",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "createSettings",
        "func": "\nvar echoReadings = 0;\nvar device = null;\n\nif (msg.topic == 'echoReadings')\n{\n    echoReadings = 1;\n    device = flow.get('device');\n    \n}\nelse\n{\n    echoReadings = 0;\n    device = msg.payload;\n\n    flow.set('device', msg.payload);    \n}\n\n\nreturn {topic:'settings',payload:msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6eaa13e9.4147bc",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "initSettings",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "163af492.5e952b"
            ]
        ]
    },
    {
        "id": "163af492.5e952b",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "Read initSettings.json",
        "filename": "initSettings.json",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "53c95857.5f3d68"
            ]
        ]
    },
    {
        "id": "53c95857.5f3d68",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Save initSettings in Memory",
        "func": "flow.set('resetInProgress',false);\nflow.set('device', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 260,
        "wires": [
            [
                "f3f3f15.081c31"
            ]
        ]
    },
    {
        "id": "d5761f6c.c46e6",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Parse Reading Byte Array",
        "func": "var device = flow.get('device');\n\nvar tempAAttr       = device.tempA;\nvar tempBAttr       = device.tempB;\nvar linkQualityAttr = device.linkQuality;\nvar signalLevelAttr = device.signalLevel;\n\nvar tempAid = device.tempAid.value;\nvar tempBid = device.tempBid.value;\ntempAAttr.value = -100.0;\ntempBAttr.value = -100.0;\nfor (var ii = 0; ii < msg.payload.length; ++ii)\n{\n    if (msg.payload[ii].id == tempAid)\n    {\n        tempAAttr.value = msg.payload[ii].temp;\n    }\n    if (msg.payload[ii].id == tempBid)\n    {\n        tempBAttr.value = msg.payload[ii].temp;\n    }\n}\n\nlinkQualityAttr.value = flow.get('linkQuality');\nsignalLevelAttr.value = flow.get('signalLevel');\n\nvar blueLedValue = context.get('blueLedValue');\nif (blueLedValue == undefined) blueLedValue = 1;\nif (blueLedValue == 0)\n{\n    blueLedValue = 1; \n}\nelse\n{\n    blueLedValue = 0;\n}\nvar deviceMessage = {topic : 'reading', payload : device};\nvar resetMessage = null;\nif ((msg.payload.length != 2) || (tempAAttr.value < -99.0) || (tempBAttr.value < -99.0)) \n{\n    blueLedValue = 0;\n    deviceMessage = null;\n    if (!flow.get('resetInProgress')) resetMessage = {topic : 'resetOneWire', payload : 1};\n}\ncontext.set('blueLedValue', blueLedValue);\n\n\nreturn [deviceMessage, {topic : 'blueLed', payload : blueLedValue}, {topic : '', payload : 1}, resetMessage];\n",
        "outputs": 4,
        "noerr": 0,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "aab27192.75421"
            ],
            [
                "db3278f.cf93b88"
            ],
            [
                "12856bbc.b69924"
            ],
            [
                "cbf54b7.b4fdfb8",
                "7fbb0296.3630ac"
            ]
        ]
    },
    {
        "id": "f69c600b.9542",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 360,
        "wires": [
            [
                "afd71a05.ebd4e8"
            ],
            [],
            []
        ]
    },
    {
        "id": "5b86fa96.034764",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "f69c600b.9542"
            ]
        ]
    },
    {
        "id": "afd71a05.ebd4e8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Get Signal Quality",
        "func": "var info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nvar levelStartIndex = info.indexOf('Signal level=');\nvar linkStopIndex   = info.indexOf('/70');\nvar levelStopIndex   = info.lastIndexOf('dBm');\nvar linkQuality = Number(info.substring(linkStartIndex + 13, linkStopIndex));\nvar signalLevel =  Number(info.substring(levelStartIndex + 13, levelStopIndex - 1));\nvar ssid = info.substring(info.indexOf('ESSID') + 7);\nssid = ssid.substring(0,ssid.indexOf('\"'));\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nflow.set('linkQuality',linkQuality);\nflow.set('signalLevel', signalLevel);\nflow.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cc6c7e0d.d9a1b",
        "type": "rpi-ds18b20",
        "z": "5f562f66.a301e",
        "topic": "",
        "array": true,
        "name": "",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "d5761f6c.c46e6"
            ]
        ]
    },
    {
        "id": "7b776e34.64c92",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "cc6c7e0d.d9a1b"
            ]
        ]
    },
    {
        "id": "12856bbc.b69924",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 320,
        "y": 500,
        "wires": [
            [
                "cc6c7e0d.d9a1b"
            ]
        ]
    },
    {
        "id": "db3278f.cf93b88",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "",
        "pin": "11",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "b6a64bd5.3bd8b8",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "One Wire Power",
        "pin": "13",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "x": 1040,
        "y": 620,
        "wires": []
    },
    {
        "id": "26c7a2ad.9c0d8e",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Turn On",
        "func": "return {topic:'reset',payload:1};",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 620,
        "wires": [
            [
                "b6a64bd5.3bd8b8",
                "d6bfb4a9.1c6358"
            ]
        ]
    },
    {
        "id": "7fbb0296.3630ac",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Turn Off",
        "func": "flow.set('resetInProgress',true);\nreturn {topic:'reset',payload:0};",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 680,
        "wires": [
            [
                "b6a64bd5.3bd8b8"
            ]
        ]
    },
    {
        "id": "cbf54b7.b4fdfb8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 700,
        "y": 620,
        "wires": [
            [
                "26c7a2ad.9c0d8e"
            ]
        ]
    },
    {
        "id": "d6bfb4a9.1c6358",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "20",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "373610f3.8eb65"
            ]
        ]
    },
    {
        "id": "373610f3.8eb65",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "resetInProgress false",
        "func": "flow.set('resetInProgress',false);\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 1220,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "b5c46e7b.e64ee",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 540,
        "y": 680,
        "wires": [
            [
                "cbf54b7.b4fdfb8",
                "7fbb0296.3630ac"
            ]
        ]
    },
    {
        "id": "c01ae89f.f25478",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nreturn {topic: msg.payload, payload:jsonPretty};",
        "outputs": 1,
        "noerr": 0,
        "x": 430,
        "y": 80,
        "wires": [
            [
                "5902d0c0.241a6"
            ]
        ]
    },
    {
        "id": "c6e7a50a.046978",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \n\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 160,
        "wires": [
            [
                "f3f3f15.081c31"
            ]
        ]
    },
    {
        "id": "aab27192.75421",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Readings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'reading');\nflow.set('device', msg.payload); \n\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 860,
        "y": 420,
        "wires": [
            [
                "93049b70.2dc5c8"
            ]
        ]
    }
]